# =====================================================================
# General configs for any Intel x64 architecture-based system
# =====================================================================

# =====================================================================
# 1. General Simulation Settings
# High-level parameters that control the global simulator behavior.
# =====================================================================
[general]
enable_icache_modeling = true


# =====================================================================
# 2. Core Architecture
# Defines the processor model, branch predictor, and performance model.
# =====================================================================
[perf_model/core]
type = interval
core_model = nehalem    # Closest architecture supported in Sniper to simulate modern Intel processors

[perf_model/branch_predictor]
# Recent processors use a 'tournament_m' branch predictor
type = pentium_m        # Best available approximation in Sniper for a modern predictor


# =====================================================================
# 3. Memory Hierarchy (Cache & DRAM)
# Defines all cache levels and the main memory configuration.
# =====================================================================
[caching_protocol]
type = parametric_dram_directory_msi

[perf_model/cache]
levels = 3

# --- L1 Caches (Private per core) ---
[perf_model/l1_icache]
perfect = false
cache_block_size = 64
address_hash = mask
replacement_policy = lru
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l1_dcache]
perfect = false
cache_block_size = 64
address_hash = mask
replacement_policy = lru
perf_model_type = parallel
writethrough = 0
shared_cores = 1

# --- L2 Cache (Private per core) ---
[perf_model/l2_cache]
perfect = false
cache_block_size = 64
address_hash = mask
replacement_policy = lru
perf_model_type = parallel
writethrough = 0
shared_cores = 1

# --- L3 Cache / Last-Level Cache (Shared) ---
[perf_model/l3_cache]
perfect = false
cache_block_size = 64
address_hash = mask
replacement_policy = lru
perf_model_type = parallel
dvfs_domain = global    # L1 and L2 run at core frequency (default), L3 is system frequency
prefetcher = none
writeback_time = 0
writethrough = 0

# --- Main Memory (DRAM) & Coherence Directory ---
[perf_model/dram_directory]
associativity = 16
directory_type = full_map

[perf_model/dram]
num_controllers = -1    # Distributed DRAM controller model (NUMA-style)

[perf_model/dram/write_queue]
# Makes memory write timing more realistic by accounting for possible delays due to write queue saturation
enabled = false
num_entries = 32        # 0..2147483647 (INT32_MAX)
enqueue_latency = 0     # enqueue latency (in ns)
merging = true          # merging writes
burst_length = 8        # 8 transfers (64-bit)


# =====================================================================
# 4. Interconnect Network
# Defines how cores and memory communicate.
# =====================================================================
[network]
memory_model_1 = bus
memory_model_2 = bus

[network/bus]
ignore_local_traffic = true # Memory controllers are on-chip, so traffic from core0 to dram0 does not use the QPI links


# =====================================================================
# 5. Power and Clock Management
# Defines DVFS, voltage, and simulation synchronization schemes.
# =====================================================================
[dvfs]
transition_latency = 2000 # In ns, "under 2 microseconds" according to http://download.intel.com/design/intarch/papers/323671.pdf (page 8)

[dvfs/simple]
cores_per_socket = 1

[power]
vdd = 1.2 # Volts

[perf_model/sync]
reschedule_cost = 1000

[clock_skew_minimization]
scheme = barrier

[clock_skew_minimization/barrier]
quantum = 100
