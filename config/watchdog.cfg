#include gainestown-nvm

[general]
project_type = donuts
total_cores = 4

[core/hook_periodic_ins]
ins_per_core = 1000    # After how many instructions should each core increment the global HPI counter
ins_global = 10000     # Aggregate number of instructions between HOOK_PERIODIC_INS callbacks

[epoch]
shared_cores = 2
max_interval_time = 40000,50000
max_interval_instructions = 50000   # (similar 50000 for 'all' vds)

#[epoch] # single-domain
#versioned_domains = 1               # [not use] because it always 1
#shared_cores = 4                    # [not use] because it always 'all'
#max_interval_time = 50000
#max_interval_instructions = 40000

#[epoch] # multi-domain
#versioned_domains = 4               # (optional, but it's need match)
#shared_cores = 3,2,2,3              # for 10 cores
#max_interval_time = 30000,40000,50000,60000
#max_interval_instructions = 50000   # (similar 50000 for 'all' vds)

#[epoch] # multi-domain
#versioned_domains = 2               # (auto, set by shared_cores) (optional)
#shared_cores = 3,2,2,3              # for 10 cores, assumes 4 vds

#[epoch] # multi-domain
#shared_cores = 3,2,2,3              # for 10 cores, assumes 4 vds

#[epoch] # multi-domain
#versioned_domains = 4
#shared_cores = 3                    # (optional) for 12 cores and 4 vds

#[epoch] # multi-domain
#versioned_domains = 4
#shared_cores = 2                    # if total_cores != 8: [[ INVALID! ]]

#[epoch] # multi-domain
#versioned_domains = 2
#shared_cores = 0                    # (auto, set by total_cores / vd) (optional)

#[epoch] # multi-domain
#versioned_domains = 2               # set shared_cores = total_cores / vd) (optional)

#[epoch] # multi-domain
#shared_cores = 2                    # for 4 cores, assumes 1 vd; for 8 cores, assumes 2 vd

#[epoch] # multi-domain
#similar_to_level = 3                # 0 to processors, 1 to L1, 2 to L2... [default: 0]

#[epoch] # multi-domain
#similar_to_level = 0                # [DISABLED] any manual configuration disables this property
#shared_cores = 2

# Periodic Interruptions (by time or instructions)
#max_interval_time = 50000           # in ns
# Check if 'max_interval_instructions' is greater and divisible by 'core/hook_periodic_ins/ins_global'
# and 'core/hook_periodic_ins/ins_global' is greater or equal 'core/hook_periodic_ins/ins_per_core'.
# Recommended 'max_interval_instructions' at least 4x greater than ins_global for greater accuracy.
#max_interval_instructions = 50000

[perf_model/cache]
levels = 3

[perf_model/l1_icache]
cache_size = 32
associativity = 4
replacement_policy = lru

[perf_model/l1_dcache]
cache_size = 4
associativity = 4
writethrough = 0
shared_cores = 1

[perf_model/l2_cache]
cache_size = 16
associativity = 4
writethrough = 0
shared_cores = 2

[perf_model/l3_cache]
cache_block_size = 64
cache_size = 32
associativity = 8
cache_set_threshold = 1.0
cache_threshold = 0.75
replacement_policy = lru
writethrough = 0
shared_cores = 4
